;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Sáb May 21 2016
; Processor: PIC16F877
; Compiler:  MPASM (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================

#include p16f877.inc                ; Include register definition file


;====================================================================
; VECTOR RESET
;====================================================================

		org		00
		goto		inicio
		org		05

;====================================================================
; CONFIGURACION DE PUERTOS
;====================================================================

inicio

			bsf		0x03,5
			bcf		0x03,6
			movlw	0x00
			movwf	0x09
			movlw	0x07
			movwf	0x05
			movlw	0x00
			movwf	0x06
			movwf	0x07
			movwf	0x08
			movlw	0x86
			movwf	0x1f
			bcf		0x03,5
			
			clrf		0x05
			clrf		0x06
			clrf		0x07
			clrf		0x08
			clrf		0x09
			
			
;====================================================================
;	CODIGO PRINCIPAL
;====================================================================

				movlw			0x00
				movwf			0x50

ciclo			call			dibujo
				movlw		0x08
				call			repito
				incf			0x50
				movf			0x50,0
				xorlw		0x07
				btfsc		0x03,2
				clrf			0x50
				goto			ciclo
			
			
;====================================================================
;	SUBRUTINAS
;====================================================================			
;Rutina de retardo
retardo
				movlw		0x03
				movwf		0x25
ret3			movlw		0x05
				movwf		0x26
ret2			movlw		0x20
				movwf		0x27
ret1			decfsz		0x27
				goto			ret1
				decfsz		0x26
				goto			ret2
				decfsz		0x25
				goto			ret3
				return


;Rutina para rotar los datos
rotar
			btfss			0x05,1
			goto				rizq
			goto				rder
			
rizq		movwf			0x41
			clrf				0x42

			bsf				0x42,0
			btfss			0x41,7
			bcf				0x42,0
			
			bsf				0x42,7
			btfss			0x41,6
			bcf				0x42,7

			bsf				0x42,6
			btfss			0x41,5
			bcf				0x42,6

			bsf				0x42,5
			btfss			0x41,4
			bcf				0x42,5

			bsf				0x42,4
			btfss			0x41,3
			bcf				0x42,4

			bsf				0x42,3
			btfss			0x41,2
			bcf				0x42,3

			bsf				0x42,2
			btfss			0x41,1
			bcf				0x42,2

			bsf				0x42,1
			btfss			0x41,0
			bcf				0x42,1
			goto				rfin		

rder		movwf			0x41
			clrf				0x42

			bsf				0x42,0
			btfss			0x41,1
			bcf				0x42,0
			
			bsf				0x42,1
			btfss			0x41,2
			bcf				0x42,1

			bsf				0x42,2
			btfss			0x41,3
			bcf				0x42,2

			bsf				0x42,3
			btfss			0x41,4
			bcf				0x42,3

			bsf				0x42,4
			btfss			0x41,5
			bcf				0x42,4

			bsf				0x42,5
			btfss			0x41,6
			bcf				0x42,5

			bsf				0x42,6
			btfss			0x41,7
			bcf				0x42,6

			bsf				0x42,7
			btfss			0x41,0
			bcf				0x42,7
			goto				rfin
			
rfin		return	

;Rutina para rotar  un bit todos los registros	

rotatotal

				movlw		.8
				movwf		0x44
clc3			movf			0x44,0	
				addwf		0x02,1
				goto			cfin
				goto			c0
				goto			c1
				goto			c2
				goto			c3
				goto			c4
				goto			c5
				goto			c6
				goto			c7
				
				
c0			movf			0x30,0
				call			rotar
				movf			0x42,0
				movwf		0x30
				goto			cfin
				
				
c1			movf			0x31,0
				call			rotar
				movf			0x42,0
				movwf		0x31
				goto			cfin
				
c2			movf			0x32,0
				call			rotar
				movf			0x42,0
				movwf		0x32
				goto			cfin
				
c3			movf			0x33,0
				call			rotar
				movf			0x42,0
				movwf		0x33
				goto			cfin
				
c4			movf			0x34,0
				call			rotar
				movf			0x42,0
				movwf		0x34
				goto			cfin
				
c5			movf			0x35,0
				call			rotar
				movf			0x42,0
				movwf		0x35
				goto			cfin
				
c6			movf			0x36,0
				call			rotar
				movf			0x42,0
				movwf		0x36
				goto			cfin
				
c7			movf			0x37,0
				call			rotar
				movf			0x42,0
				movwf		0x37
				goto			cfin				
				
cfin			decfsz		0x44
				goto			clc3
				
				return
				
			
;Rutina para repetir ciclo
repito
				movwf		0x20
clcmu		call			muestra
				decfsz		0x20
				goto			clcmu
				retlw		0

;Rutina para mostrar en pantalla las letras
muestra
				movlw		0x20				;Numero de ciclos para el barrido de datos
				movwf		0x21				;Contador de ciclos
				
clc1			movlw		0x08				;Altura de la pantalla
				movwf		0x22				;Contador de dibujo: numero de ciclos para una altura dada
				
				movlw		0x01				;Habilitador de columnas: este registro va a mantener 
				movwf		0x23				;rotando  un uno continuamente			
				
				movlw		0x30 + 0x08	;Valor del dibujo mas bajo + 8 = Valor de dibujo mas alto (0x38)
				movwf		0x04				;Se envia 0x38 al registro FSR
				

clc2			
				movlw		0x00				;Se desctivan todas las filas/columnas
				movwf		0x09				;Se envia al puerto E	
				
				decf			0x04,1				;Decrementa el registro FRS
				
				;-------------------------------------------- Desactiva Pantalla 1
				
				movf			0x00,0	
				movwf		0x08
				btfss		0x05,3
				goto			salto1
				goto			sal1
salto1
				movlw		0xff
				movwf		0x08
				
;-------------------------------------------- Desactiva Pantalla 2
sal1			
				
				movf			0x00,0
				movwf		0x07			
				btfss		0x05,4
				goto			salto3
				goto			sal2
salto3
				movlw		0xff
				movwf		0x07
;-------------------------------------------- Desactiva Pantalla 3
sal2
				movf			0x00,0	
				movwf		0x06	
				btfss		0x05,5
				goto			salto4
				goto			sal3
salto4
				movlw		0xff
				movwf		0x06
				
				
sal3			movlw		0x01				;Se habilita la primera columna
				movwf		0x09				;Se envia al puerto E
				
				movf			0x23,0			;El uno en este registro se rota para habilitar una columnas por ciclo
				movwf		0x06				;Se envia el uno hacia el puerto B
				
				movlw		0x02
				movwf		0x09
				

				rlf				0x23				;Rota el habilitador de columnas
				bcf			0x23,0			;Pone en cero el primer bit del habilitador de columnas
				call			retardo			;Se espera un momento

				movlw		0xff
				movwf		0x06
				
				movlw		0x01
				movwf		0x09
				
				movlw		0x00
				movwf		0x06
				
				movlw		0x02
				movwf		0x09
			
				
				decfsz		0x22				;Se decrementa el contador de dibujo hasta llegar a cero
				
				goto 		clc2
				
				decfsz		0x21				;Se decrementa el contador de ciclos hasta llegar a cero
				goto			clc1

				
				btfsc			0x05,0
				call				rotatotal

				retlw		0

;Rutina para las letras
dibujo
				movf			0x50,0
				addwf		0x02,1
				goto			d1
				goto			d2
				goto			d3
				goto			d4
				goto			d5
				goto			d6
				goto			d7
				goto			d8
				goto			d9
				goto			d10				

;A
d1			movlw		b'11111111'
				movwf		0x30
				movlw		b'11000011'
				movwf		0x30 + 0x01
				movlw		b'11011011'
				movwf		0x30 + 0x02
				movlw		b'11000011'
				movwf		0x30 + 0x03
				movlw		b'11011011'
				movwf		0x30 + 0x04
				movlw		b'11011011'
				movwf		0x30 + 0x05
				movlw		b'11111111'
				movwf		0x30 + 0x06
				movlw		b'11111111'
				movwf		0x30 + 0x07
				goto			dfin

;B
d2			movlw		b'11111111'
				movwf		0x30
				movlw		b'11000111'
				movwf		0x30 + 0x01
				movlw		b'11011011'
				movwf		0x30 + 0x02
				movlw		b'11000111'
				movwf		0x30 + 0x03
				movlw		b'11011011'
				movwf		0x30 + 0x04
				movlw		b'11000111'
				movwf		0x30 + 0x05
				movlw		b'11111111'
				movwf		0x30 + 0x06
				movlw		b'11111111'
				movwf		0x30 + 0x07
				goto			dfin

;C			
d3			movlw		b'11111111'
				movwf		0x30
				movlw		b'11000011'
				movwf		0x30 + 0x01
				movlw		b'11011111'
				movwf		0x30 + 0x02
				movlw		b'11011111'
				movwf		0x30 + 0x03
				movlw		b'11011111'
				movwf		0x30 + 0x04
				movlw		b'11000011'
				movwf		0x30 + 0x05
				movlw		b'11111111'
				movwf		0x30 + 0x06
				movlw		b'11111111'
				movwf		0x30 + 0x07
				goto			dfin

;D
d4			movlw		b'11111111'
				movwf		0x30
				movlw		b'11000111'
				movwf		0x30 + 0x01
				movlw		b'11011011'
				movwf		0x30 + 0x02
				movlw		b'11011011'
				movwf		0x30 + 0x03
				movlw		b'11011011'
				movwf		0x30 + 0x04
				movlw		b'11000111'
				movwf		0x30 + 0x05
				movlw		b'11111111'
				movwf		0x30 + 0x06
				movlw		b'11111111'
				movwf		0x30 + 0x07	
				goto			dfin

;E				
d5			movlw		b'11111111'
				movwf		0x30
				movlw		b'11000011'
				movwf		0x30 + 0x01
				movlw		b'11011111'
				movwf		0x30 + 0x02
				movlw		b'11000011'
				movwf		0x30 + 0x03
				movlw		b'11011111'
				movwf		0x30 + 0x04
				movlw		b'11000011'
				movwf		0x30 + 0x05
				movlw		b'11111111'
				movwf		0x30 + 0x06
				movlw		b'11111111'
				movwf		0x30 + 0x07
				goto			dfin
;F			
d6			movlw		b'11111111'
				movwf		0x30
				movlw		b'11000011'
				movwf		0x30 + 0x01
				movlw		b'11011111'
				movwf		0x30 + 0x02
				movlw		b'11000111'
				movwf		0x30 + 0x03
				movlw		b'11011111'
				movwf		0x30 + 0x04
				movlw		b'11011111'
				movwf		0x30 + 0x05
				movlw		b'11111111'
				movwf		0x30 + 0x06
				movlw		b'11111111'
				movwf		0x30 + 0x07
				goto			dfin				

;G				
d7			movlw		b'11111111'
				movwf		0x30
				movlw		b'11000011'
				movwf		0x30 + 0x01
				movlw		b'11011111'
				movwf		0x30 + 0x02
				movlw		b'11010011'
				movwf		0x30 + 0x03
				movlw		b'11011011'
				movwf		0x30 + 0x04
				movlw		b'11000011'
				movwf		0x30 + 0x05
				movlw		b'11111111'
				movwf		0x30 + 0x06
				movlw		b'11111111'
				movwf		0x30 + 0x07
				goto			dfin
				
d8			movlw		b'11111111'
				movwf		0x30
				movlw		b'11000011'
				movwf		0x30 + 0x01
				movlw		b'11011011'
				movwf		0x30 + 0x02
				movlw		b'11000011'
				movwf		0x30 + 0x03
				movlw		b'11011011'
				movwf		0x30 + 0x04
				movlw		b'11011011'
				movwf		0x30 + 0x05
				movlw		b'11111111'
				movwf		0x30 + 0x06
				movlw		b'11111111'
				movwf		0x30 + 0x07
				goto			dfin
				
d9			movlw		b'11111111'
				movwf		0x30
				movlw		b'11000011'
				movwf		0x30 + 0x01
				movlw		b'11011011'
				movwf		0x30 + 0x02
				movlw		b'11000011'
				movwf		0x30 + 0x03
				movlw		b'11011011'
				movwf		0x30 + 0x04
				movlw		b'11011011'
				movwf		0x30 + 0x05
				movlw		b'11111111'
				movwf		0x30 + 0x06
				movlw		b'11111111'
				movwf		0x30 + 0x07
				goto			dfin				
				
d10			movlw		b'11111111'
				movwf		0x30
				movlw		b'11000011'
				movwf		0x30 + 0x01
				movlw		b'11011011'
				movwf		0x30 + 0x02
				movlw		b'11000011'
				movwf		0x30 + 0x03
				movlw		b'11011011'
				movwf		0x30 + 0x04
				movlw		b'11011011'
				movwf		0x30 + 0x05
				movlw		b'11111111'
				movwf		0x30 + 0x06
				movlw		b'11111111'
				movwf		0x30 + 0x07
				goto			dfin
				
dfin			return
;====================================================================
      END
